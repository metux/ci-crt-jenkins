jenkins:
  systemMessage: "CI-RT jenkins: https://github.com/metux/ci-rt-jenkins.git"
# nope, doesnt work :(
  numExecutors: 5
  scmCheckoutRetryCount: 2
  mode: NORMAL
  # docker-host will be used for building the CI-RT docker images
  labelString: docker-host
  clouds:
#  - hypervisor:
#      hypervisorHost: "localhost"
#      hypervisorSshPort: 22
#      hypervisorSystemUrl: "system?no_tty=1"
#      hypervisorType: "QEMU+SSH"
#      maxOnlineSlaves: 2
#      # the native library doesn't work
#      useNativeJavaConnection: false
#      username: "root"
#  - hypervisor:
#      hypervisorHost: "localhost"
#      hypervisorSshPort: 22
#      hypervisorSystemUrl: "system?no_tty=1"
#      hypervisorType: "R4D"
#      maxOnlineSlaves: 3
#      useNativeJavaConnection: false
#      username: "root"
  - docker:
      dockerApi:
        connectTimeout: 60
        dockerHost:
          uri: "unix:///var/run/docker.sock"
        readTimeout: 60
      name: "docker"
      templates:
      - connector:
          attach:
            user: "jenkins"
        dockerTemplateBase:
          image: "cirt-jenkins-slave-kernel"
        labelString: "kernel"
        name: "DNG kernel build image"
        pullStrategy: PULL_NEVER
        pullTimeout: 300
        remoteFs: "/home/jenkins"
# doesnt work
#        numExecutors: 5

#  nodes:
#    - dumb:
#        labelString: "linux docker test kernel"
#        name: "(master)"

jobs:
  - script: >
      folder('debkins') {
          displayName('DebKins')
          description('Debkins build environment')
      }

  - script: >
      pielineJob('debkins/bootstrap') {

        def repo = 'https://github.com/metux/deb-pkg.git'

        triggers {
            scm('H/5 * * * *')
        }
        description("Debkins: $repo")

        definition {
          cpsScm {
            scm {
              git {
                remote { url(repo) }
                branches('debkins', '**/feature*')
                scriptPath('Jenkinsfile')
                extensions { }  // required as otherwise it may try to tag the repo, which you may not want
              }
            }
          }
        }
      }

unclassified:
  globalLibraries:
    libraries:
      - name: "CI-RT"
        defaultVersion: origin/master
        retriever:
          modernSCM:
            scm:
              git:
                remote: "https://github.com/metux/jenkins-cirt-libs"
  location:
    adminAddress: "info@metux.net"
    url: "http://jenkins:8080/"

  mailer:
    adminAddress: info@metux.net
    replyToAddress: info@metux.net
    smtpHost: localhost
    smtpPort: 25

credentials:
  system:
    domainCredentials:
      - credentials:
        - usernamePassword:
            scope: GLOBAL
            id: "POSTGRES_CREDENTIALS"
            username: "jenkins"
            password: "jenkins001"
            description: "cirt postgres database"
